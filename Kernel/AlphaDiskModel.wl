(* ::Package:: *)

(* ::Title:: *)
(*AlphaDiskModel Package*)


(* ::Text:: *)
(*This package implements the radiation of the "standard" or \[Alpha] accretion disk model in Kerr space-time. In the comments you can find equation numbers from the following references:*)
(*- N&T - Section 5 of the lecture notes of Novikov & Thorne for the basic structure of the disk: *)
(*	Novikov, I. D., & Thorne, K. S. (1973). Astrophysics of black holes. Black holes (Les astres occlus), 1, 343-450.*)
(*- P&T - Some of the corrections to N&T as found by Page & Thorne: *)
(*	Page, D. N., & Thorne, K. S. (1974). Disk-accretion onto a black hole. Time-averaged structure of accretion disk. Astrophysical Journal, Vol. 191, pp. 499-506 (1974), 191, 499-506.*)
(*- S&S - For the spectrum of the disk, we refer to equations from Shakura & Sunyaev: *)
(*	Shakura, N. I., & Sunyaev, R. A. (1973). Black holes in binary systems. Observational appearance. Astronomy and Astrophysics, Vol. 24, p. 337-355, 24, 337-355.*)
(*	*)


(* ::Section:: *)
(*Define Usage for Public Functions*)


BeginPackage["BlackHoleImages`AlphaDiskModel`"]

DiskParams::usage = 
"DiskParams[a, \[Alpha], m, mdot, Options] returns an association containing information about accretion disk's radiation. 
The keys are 'Temperature', 'SpectralFluxDensity', 'FluxDensity', 'PeakFrequency', 'rDefinition','rISCO'.";
ObservedDiskElement::usage = 
"ObservedDiskElement[disk, geodesic] returns an association containing information about accretion disk's 'disk' (assoc generated by DiskParams) radiation observed by observers intersecting the geodesic 'geodesic' (assoc generated by KerrNullGeodesics`KerrNullGeoDistant). 
The keys are 'PhysicalTemperature', 'EffectiveTemperature', 'SpecificIntensity', 'Intensity','PeakFrequency'.";

Begin["`Private`"];


(* ::Section:: *)
(*Definitions*)


Msun = 1477; (*?*)


\[ScriptCapitalA][a_, r_] := 1 + (a/r)^2 + 2a^2/r^3; (*N&T 5.4.1a*)
\[ScriptCapitalB][a_, r_] := 1 + a/r^(3/2); (*N&T 5.4.1b*)
\[ScriptCapitalC][a_, r_] := 1 - 3/r + 2a/r^(3/2); (*N&T 5.4.1c*)
\[ScriptCapitalD][a_, r_] := 1 - 2/r + a^2/r^2; (*N&T 5.4.1d*)
\[ScriptCapitalE][a_, r_] := 1 + 4a^2/r^2 - 4a^3/r^3 + 3a^4/r^4; (*N&T 5.4.1e*)
\[ScriptCapitalF][a_, r_] := 1 - 2a/r^(3/2) + a^2/r^2; (*N&T 5.4.1f*)
\[ScriptCapitalG][a_, r_] := 1 - 2/r + a/r^(3/2); (*N&T 5.4.1g*)
\[ScriptCapitalQ][a_, r_, M_, rISCO_, x1_, x2_, x3_] := (1+a r^(-3/2))/(r-3 + 2 a/r^(-1/2))^(1/2) (r^(1/2)-rISCO^(1/2) - (3/4) a Log[r/rISCO] - (3(x1-a)^2)/(x1 (x1 - x2) (x1 -x3)) Log[(r^(1/2)-x1)/(rISCO^(1/2)-x1)] - (3(x2-a)^2)/(x2 (x2 - x1) (x2 -x3)) Log[(r^(1/2)-x2)/(rISCO^(1/2)-x2)] - (3(x3-a)^2)/(x3 (x3 - x2) (x3 -x1)) Log[(r^(1/2)-x3)/(rISCO^(1/2)-x3)]); (*P&T (35)*)


(* ::Section:: *)
(*Temperature*)


(*Temperatures in different regions of the disk*)
TSC[a_, r_, \[Alpha]_, M_, mdot_, rISCO_, x1_, x2_, x3_] := 3 10^7 (M/(3 Msun))^(-1/2) mdot^(1/4) r^(-3/4) \[ScriptCapitalB][a,r]^(-1/4) \[ScriptCapitalC][a,r]^(-1/8) \[ScriptCapitalQ][a,r,M,rISCO, x1, x2, x3]^(1/4); (*N&T (5.10.1)*)
TSB[a_, r_, \[Alpha]_, M_, mdot_, rISCO_, x1_, x2_, x3_] := 5 10^7 \[Alpha]^(7/45) (M/(3 Msun))^(-29/45) mdot^(16/45) r^(-87/90) \[ScriptCapitalA][a,r]^(2/9) \[ScriptCapitalB][a,r]^(-14/45) \[ScriptCapitalC][a,r]^(-2/9) \[ScriptCapitalD][a,r]^(2/45) \[ScriptCapitalE][a,r]^(-1/9) \[ScriptCapitalQ][a,r,M,rISCO, x1, x2, x3]^(16/45); (*N&T (5.10.8)*)
TSA[a_, r_, \[Alpha]_, M_, mdot_] := 6 10^8 \[Alpha]^(2/9) (M/(3 Msun))^(-10/9) mdot^(8/9) r^(-17/9) \[ScriptCapitalA][a,r]^(8/9) \[ScriptCapitalB][a,r]^(-16/9) \[ScriptCapitalC][a,r]^(-2/9) \[ScriptCapitalD][a,r]^(2/9) \[ScriptCapitalE][a,r]^(4/9) ; (*N&T (5.10.8)*)

mp = 1.672623099 10^-27 (*proton mass in kg*)
nA[a_, r_, \[Alpha]_, M_, mdot_, rISCO_, x1_, x2_, x3_] := 0.1/mp \[Alpha]^-1 mdot^-2 (M/3/Msun) r^(3/2) \[ScriptCapitalA][a,r]^-4 \[ScriptCapitalB][a,r]^6 \[ScriptCapitalD][a,r] \[ScriptCapitalE][a,r]^2 \[ScriptCapitalQ][a,r,M,rISCO,x1,x2,x3]^-2; (*N&T (5.9.10)*)

hB[a_, r_, \[Alpha]_, M_, mdot_, rISCO_, x1_, x2_, x3_] := 30 \[Alpha]^(-1/10) (M/3/Msun)^(7/10) mdot^(1/5) r^(21/20) \[ScriptCapitalA][a,r] \[ScriptCapitalB][a,r]^(-4/5) \[ScriptCapitalC][a,r]^(1/2) \[ScriptCapitalD][a,r]^(-3/5) \[ScriptCapitalE][a,r]^(-1/2) \[ScriptCapitalQ][a,r,M,rISCO,x1,x2,x3]^(1/5); (*N&T (5.9.8)*)
H0[T_, a_, r_, \[Alpha]_, M_, mdot_, rISCO_, x1_, x2_, x3_] :=1.5362 10^-40 ((M r)^3 T)/(M mp hB[a, r, \[Alpha], M, mdot, rISCO, x1, x2, x3]); (*Characteristic disk height, S&S after (2.28)*)


(* ::Section:: *)
(*Spectra*)


Xfct[\[Nu]_, T_] := 4.799243 10^-11 \[Nu]/T; (*h\[Nu]/(kT) in SI units (that is, frequency \[Nu] in Hertz or s^-1, temperature in Kelvin)*) 
\[Kappa]fct[\[Nu]_, T_] := (4.1 10^-33 (1-E^-Xfct[\[Nu], T]))/(T^(7/2) Xfct[\[Nu], T]^3); (*Coefficient of free-free absorption in units m^5, below (3.3) in S&S*)
B[\[Nu]_, T_] := (*2\[Pi]h/c^2*) 4.632276 10^-50 \[Nu]^3/(E^Xfct[\[Nu], T]-1); (*Planckian spectrum applicable for Region C, (3.1) in S&S*)

(*Spectral Flux Densities in different regions of the disk*)
FC[\[Nu]_, a_, r_, \[Alpha]_, M_, mdot_, rISCO_, x1_, x2_, x3_] := B[\[Nu], TSC[a, r, \[Alpha], M, mdot, rISCO, x1, x2, x3]];
FB[\[Nu]_, a_, r_, \[Alpha]_, M_, mdot_, rISCO_, x1_, x2_, x3_] := ((3 \[Kappa]fct[\[Nu], TSB[a, r, \[Alpha], M, mdot, rISCO, x1, x2, x3]])/((6.6524 10^-29)^2 H0[TSB[a, r, \[Alpha], M, mdot, rISCO, x1, x2, x3], a, r, \[Alpha], M, mdot, rISCO, x1, x2, x3]))^(1/3) B[\[Nu], TSB[a, r, \[Alpha], M, mdot, rISCO, x1, x2, x3]]; (*S&S (3.3)*)
FA[\[Nu]_, a_, r_, \[Alpha]_, M_, mdot_, rISCO_, x1_, x2_, x3_] := Sqrt[(3 \[Kappa]fct[\[Nu], TSA[a, r, \[Alpha], M, mdot]] nA[a, r, \[Alpha], M, mdot, rISCO, x1, x2, x3])/(6.6524 10^-29)]B[\[Nu], TSA[a, r, \[Alpha], M, mdot]] ; (*S&S (3.2)*)

(*Integrated Flux Densities in different regions of the disk*)
QC[a_, r_, \[Alpha]_, M_, mdot_, rISCO_, x1_, x2_, x3_] := 5.67037 10^-8 TSC[a, r, \[Alpha], M, mdot, rISCO, x1, x2, x3]^4; (*S&S (3.4)*)
QB[a_, r_, \[Alpha]_, M_, mdot_, rISCO_, x1_, x2_, x3_] := 2.8 H0[TSB[a, r, \[Alpha], M, mdot, rISCO, x1, x2, x3], a, r, \[Alpha], M, mdot, rISCO, x1, x2, x3]^(-1/3) TSB[a, r, \[Alpha], M, mdot, rISCO, x1, x2, x3]^(17/6); (*S&S (3.3)*)
QA[a_, r_, \[Alpha]_, M_, mdot_, rISCO_, x1_, x2_, x3_] := 1.8 10^-10 Sqrt[nA[a, r, \[Alpha], M, mdot, rISCO, x1, x2, x3]] TSA[a, r, \[Alpha], M, mdot]^(9/4); (*S&S below (3.2)*)


(* ::Section:: *)
(*Regions*)


(*Based on Section 2 of S&S. Since the precise point of transition between the regions A,B,C is not defined in S&S, we use the condition of continuity of temperature.*)
Regions[a_, \[Alpha]_, M_, mdot_, rISCO_, x1_, x2_, x3_] := Module[{rbc1, rbc2, rbc, rab1, rab2, rab, RegionC, RegionB, RegionA},
	For[i=-2, i<=1, i++,
		rbc1 = r/.  Quiet[FindRoot[TSC[a, r, \[Alpha], M, mdot, rISCO, x1, x2, x3]== TSB[a, r, \[Alpha], M, mdot, rISCO, x1, x2, x3], {r,(1+10^i)rISCO, rISCO, \[Infinity]}]];
		If[rbc1 != rISCO, Break[]];
	];
	If[rbc1 != rISCO,
		For[i=-2, i<=1, i++,
			rbc2 = r/.  Quiet[FindRoot[TSC[a, r, \[Alpha], M, mdot, rISCO, x1, x2, x3]== TSB[a, r, \[Alpha], M, mdot, rISCO, x1, x2, x3], {r,(1+10^i)rbc1, rbc1, \[Infinity]}]];
			If[rbc2 != rbc1, Break[]];
		];
		If[rbc2!=rbc1,
			rbc = {rbc1,rbc2},
			rbc={}]
			,
		rbc={}
	];
	
	For[i=-2, i<=1, i++,
		rab1 = r/.  Quiet[FindRoot[TSA[a, r, \[Alpha], M, mdot]== TSB[a, r, \[Alpha], M, mdot, rISCO, x1, x2, x3], {r,(1+10^i)rISCO, rISCO, \[Infinity]}]];
		If[rab1 != rISCO, Break[]];
	];
	If[rab1 != rISCO,
		For[i=-2, i<=1, i++,
			rab2 = r/.  Quiet[FindRoot[TSA[a, r, \[Alpha], M, mdot]== TSB[a, r, \[Alpha], M, mdot, rISCO, x1, x2, x3], {r,(1+10^i)rab1, rab1, \[Infinity]}]];
			If[rab2 != rab1, Break[]];
		];
		If[rab2!=rab1,
			rab = {rab1,rab2},
			rab={}]
			,
		rab={}
	];
	
	If[Length[rbc]==0, 
		RegionC = Function[{Global`r}, Global`r>=1, Listable]; 
		RegionA = Function[{Global`r}, False, Listable];
		RegionB = Function[{Global`r}, False, Listable],
		If [Length[rab]==0,
			RegionC = Function[{Global`r}, (Global`r>=1 && Global`r<=rbc[[1]])||Global`r>=rbc[[2]], Listable];
			RegionB = Function[{Global`r}, Global`r>=rbc[[1]] && Global`r<=rbc[[2]], Listable];
			RegionA = Function[{Global`r}, False, Listable],
			(*else*)
			RegionC = Function[{Global`r}, (Global`r>=1 && Global`r<=rbc[[1]])||Global`r>=rbc[[2]], Listable]; 
			RegionB = Function[{Global`r}, (Global`r>=rbc[[1]] && Global`r<=rab[[1]])||(Global`r>=rab[[2]] && Global`r<=rbc[[2]]), Listable];
			RegionA = Function[{Global`r}, Global`r>=rab[[1]] && Global`r<=rab[[2]], Listable];
		]
	];
	
	<| 
		"RegionC" -> RegionC,
		"RegionB" -> RegionB,
		"RegionA" -> RegionA
	|>
]


rGrid[r_] := Module[{i, return}, 
return=False;
For[i=1, i<100, i++, If[r-2 i<0.05 && r-2 i>0, return=True]];
return
]

\[Phi]Grid[\[Phi]_, r_] := Module[{i, return}, 
return=False;
For[i=0, i<16, i++, If[Mod[\[Phi]-i 2\[Pi]/16,2\[Pi]]<0.05/r && Mod[\[Phi]-i 2\[Pi]/16,2\[Pi]]>0, return=True]];
return
]


(* ::Section:: *)
(*Public Functions*)


(* ::Text:: *)
(**)


Options[DiskParams] = {"InputUnits" -> "NovikovThorne", "OutputUnits" -> "SI", "rUnits" -> "BHMass"}


DiskParams[a_, \[Alpha]_, M0_, mdot0_, OptionsPattern[]] := Module[{M=M0, mdot=mdot0, rFactor, Z1, Z2, rISCO, x1, x2, x3, RegionC, RegionB, RegionA, TS, F, Q, \[Nu]max},

(*Units Conversion*)
If[OptionValue["InputUnits"]=="SI",
	mdot = mdot/(10^14);
	M = M 7.4256 10^-28,
	If[OptionValue["InputUnits"]=="CGS",
		mdot = mdot/(10^17);
		M = M 7.4256 10^-31,
		If[OptionValue["InputUnits"]=="ShakuraSunyaev",
			M = M Msun;
			mdot = 0.01286 M mdot;
		];
	];
];

rFactor = 1;
If[OptionValue["rUnits"]=="ShakuraSunyaev",
	rFactor = 6,
	If[OptionValue["rUnits"]=="SI",
		rFactor = 1/M,
		If[OptionValue["rUnits"]=="CGS",
			rFactor = 10^-3/M
		];
	];
];

(*Innermost stable circular orbit*)
Z1 = 1 + (1 - a^2)^(1/3) ((1+a)^(1/3)+(1-a)^(1/3)); (*N&T (5.4.8b)*)
Z2 = (3 a^2 + Z1^2)^(1/2); (*N&T (5.4.8b)*)
rISCO = 3 + Z2 - ((3-Z1)(3+Z1+2 Z2))^(1/2); (*N&T (5.4.8a)*)
x1 = 2 Cos[1/3 ArcCos[a] - \[Pi]/3]; (*P&T (14)*)
x2 = 2 Cos[1/3 ArcCos[a] + \[Pi]/3]; (*P&T (14)*)
x3 = -2 Cos[1/3 ArcCos[a]]; (*P&T (14)*)

(*Regions*)
{RegionC, RegionB, RegionA} = {"RegionC", "RegionB", "RegionA"} /. Regions[a, \[Alpha], M, mdot, rISCO, x1, x2, x3];

(*Surface Temperature*)
(*TS = Function[{Global`r}, Piecewise[{
				{TSC[a, rFactor Global`r, \[Alpha], M, mdot, rISCO, x1, x2, x3], RegionC[rFactor Global`r]},
				{TSB[a, rFactor Global`r, \[Alpha], M, mdot, rISCO, x1, x2, x3], RegionB[rFactor Global`r]},
				{TSA[a, rFactor Global`r, \[Alpha], M, mdot], RegionA[rFactor Global`r]}
}], Listable];*)

TS = Function[{Global`r}, TSC[a, rFactor Global`r, \[Alpha], M, mdot, rISCO, x1, x2, x3], Listable];

(*Spectral Flux Density*)
F = Function[{Global`\[Nu], Global`r}, Piecewise[{
				{FC[Global`\[Nu], a, rFactor Global`r, \[Alpha], M, mdot, rISCO, x1, x2, x3], RegionC[rFactor Global`r]},
				{FB[Global`\[Nu], a, rFactor Global`r, \[Alpha], M, mdot, rISCO, x1, x2, x3], RegionB[rFactor Global`r]},
				{FA[Global`\[Nu], a, rFactor Global`r, \[Alpha], M, mdot, rISCO, x1, x2, x3], RegionA[rFactor Global`r]}
}], Listable];

(*Integrated Flux Density*)
Q = Function[{Global`r}, Piecewise[{
			{QC[a, rFactor Global`r, \[Alpha], M, mdot, rISCO, x1, x2, x3], RegionC[rFactor Global`r]},
			{QB[a, rFactor Global`r, \[Alpha], M, mdot, rISCO, x1, x2, x3], RegionB[rFactor Global`r]},
			{QA[a, rFactor Global`r, \[Alpha], M, mdot, rISCO, x1, x2, x3], RegionA[rFactor Global`r]}
}], Listable];

(*Peak Frequency*)
\[Nu]max = Function[{Global`r}, Piecewise[{
			{5.8789 10^10 TSC[a, rFactor Global`r, \[Alpha], M, mdot, rISCO, x1, x2, x3], RegionC[rFactor Global`r]},
			{3.6578 10^10 TSB[a, rFactor Global`r, \[Alpha], M, mdot, rISCO, x1, x2, x3], RegionB[rFactor Global`r]},
			{2.6021 10^10 TSA[a, rFactor Global`r, \[Alpha], M, mdot], RegionA[rFactor Global`r]}
}], Listable];

<|
	"Temperature" -> TS,
	"SpectralFluxDensity" -> F,
	"FluxDensity" -> Q,
	"PeakFrequency" -> \[Nu]max,
	"rDefinition" -> 1/rFactor, (*If r-input comes in BHMasses, it must be multiplied by this*)
	"rISCO" -> rISCO
|>
]


Options[ObservedDiskElement] = {"Grid" -> True}


ObservedDiskElement[disk_Association, geodesic_, OptionsPattern[]] := Module[{rISCO, i, \[Kappa], rem, \[Phi]em, rFactor, I, Q, TS, \[Nu]max, Teff},

rISCO = disk["rISCO"];
rFactor = disk["rDefinition"];

rem = geodesic["EmissionCoordinates"][[2]];
\[Phi]em = geodesic["EmissionCoordinates"][[4]];

If[OptionValue["Grid"]==True && (rGrid[rFactor rem] || \[Phi]Grid[\[Phi]em, rem]),
	I=Q=TS=\[Nu]max=Teff=-2,
	If[geodesic["EmissionParameters"][[1]]==-1, I=Q=TS=\[Nu]max=Teff=-1,
		\[Kappa] = geodesic["EmissionParameters"][[1]];
		I = Function[{Global`\[Nu]}, \[Kappa]^3/\[Pi] disk["SpectralFluxDensity"][Global`\[Nu]/\[Kappa], rFactor rem], Listable];
		Q = \[Kappa]^4/\[Pi] disk["FluxDensity"][rFactor rem];
		TS = disk["Temperature"][rFactor rem];
		\[Nu]max = \[Kappa] disk["PeakFrequency"][rFactor rem];
		Teff = (\[Pi] Q/(5.670367 10^-8))^(1/4); (*Stefan-Boltzmann law*)
		]
];

<|
	"PhysicalTemperature" -> TS,
	"EffectiveTemperature" -> Teff,
	"SpecificIntensity" -> I,
	"Intensity" -> Q,
	"PeakFrequency" -> \[Nu]max 
|>
]

ClearAttributes[ObservedDiskElement, Listable]


(* ::Section:: *)
(*Close the Package*)


End[];

EndPackage[];
