(* ::Package:: *)

(* ::Title:: *)
(*AlphaDiskModel Package*)


(* ::Section:: *)
(*Define Usage for Public Functions*)


BeginPackage["BlackHoleImages`AlphaDiskModel`"]

DiskParams::usage = "DiskParams[\[Alpha], m, mdot, Options] returns an association containing information about accretion disk's radiation. The keys are 'Temperature', 'SpectralFluxDensity' and 'FluxDensity'.";
ObservedDiskElement::usage = "ObservedDiskElement[disk, geodesic] returns an association containing information about accretion disk's 'disk' (assoc generated by DiskParams) radiation observed on geodesic 'geodisic' (assoc generated by KerrNullGeodesics`KerrNullGeoDistant). The keys are 'PhysicalTemperature', 'EffectiveTemperature','SpectralFluxDensity', 'FluxDensity' and 'MaximalWavelength'.";

Begin["`Private`"];


(* ::Section:: *)
(*Temperature & Optical Depth Functions*)


TSC[r_, \[Alpha]_, m_, mdot_] := 3 10^7 m^(-1/4) mdot^(1/4) r^(-3/4) (1-r^(-1/2))^(1/4); (*S&S (3.5)*)
TSB[r_, \[Alpha]_, m_, mdot_] := 10^8 \[Alpha]^(1/75) mdot^(28/75) m^(-19/75) r^(-141/150) (1-r^(-1/2))^(28/75); (*S&S (3.6)*)
TSA[r_, \[Alpha]_, m_, mdot_] := 1.4 10^9 \[Alpha]^(2/9) mdot^(8/9) m^(-2/9) r^(-5/3) (1-r^(-1/2))^(8/9); (*S&S (3.7)*)
(*TSI[r_, \[Alpha]_, m_, mdot_] := 5 10^8 \[Alpha]^(1/5) mdot^(4/5) m^(-1/5) r^(-3/2) (1-r^(-1/2))^(4/5);*) (*S&S (3.8)*)
TSII[r_, \[Alpha]_, m_, mdot_] := 10^14 \[Alpha]^(12/5) mdot^(24/5) r^(-36/5) (1-r^(-1/2))^(24/5); (*S&S (3.9)*)

\[Tau]starA[r_, \[Alpha]_, m_, mdot_] := 8.4 10^-5 \[Alpha]^(-17/16) m^(-1/16) mdot^-2 r^(93/32) (1-r^(-1/2))^-2; (*S&S after (2.12), sign of r's exponent is changed*)

nA[r_, \[Alpha]_, m_, mdot_] := 4.3 10^23 \[Alpha]^-1 mdot^-2 m^-1 r^(3/2) (1-r^(-1/2))^-2; (*S&S (2.11)*)

H0[T_, r_, \[Alpha]_, m_, mdot_] := 1.6696 10^-9 \[Alpha]^(1/10) m^(11/10) mdot^(-1/5) T r^(39/20) (1-r^(-1/2))^(-1/5); (*S&S after (2.28)*)


(* ::Section:: *)
(*Spectra*)


Xfct[\[Nu]_, T_] := 4.799243 10^-11 \[Nu]/T; (*h\[Nu]/(kT)*) 
\[Kappa]fct[\[Nu]_, T_] := (4.1 10^-33 (1-E^-Xfct[\[Nu], T]))/(T^(7/2) Xfct[\[Nu], T]^3); (*m^5*)
B[\[Nu]_, T_] := (*2\[Pi]h/c^2*) 4.632276 10^-50 \[Nu]^3/(E^Xfct[\[Nu], T]-1); (*Applicable for Region C*)

FC[\[Nu]_, r_, \[Alpha]_, m_, mdot_] := B[\[Nu], TSC[r, \[Alpha], m, mdot]];
FB[\[Nu]_, r_, \[Alpha]_, m_, mdot_] := ((3 \[Kappa]fct[\[Nu], TSB[r, \[Alpha], m, mdot]])/((6.6524 10^-29)^2 H0[TSB[r, \[Alpha], m, mdot], r, \[Alpha], m, mdot]))^(1/3) B[\[Nu], TSB[r, \[Alpha], m, mdot]]; (*S&S (3.3)*)
FA[\[Nu]_, r_, \[Alpha]_, m_, mdot_] := Sqrt[(3 \[Kappa]fct[\[Nu], TSA[r, \[Alpha], m, mdot]] nA[r, \[Alpha], m, mdot])/(6.6524 10^-29)]B[\[Nu], TSA[r, \[Alpha], m, mdot]] ; (*S&S (3.2)*)
FII[\[Nu]_, r_, \[Alpha]_, m_, mdot_] := Null (*to be added*) ;

QC[r_, \[Alpha]_, m_, mdot_] := 5.67037 10^-8 TSC[r, \[Alpha], m, mdot]^4;
QB[r_, \[Alpha]_, m_, mdot_] := 2.8 H0[TSB[r, \[Alpha], m, mdot], r, \[Alpha], m, mdot]^(-1/3) TSB[r, \[Alpha], m, mdot]^(17/6); (*S&S (3.3)*)
QA[r_, \[Alpha]_, m_, mdot_] := 1.8 10^-10 Sqrt[nA[r, \[Alpha], m, mdot]] TSA[r, \[Alpha], m, mdot]^(9/4); (*S&S (3.2)*)
QII[r_, \[Alpha]_, m_, mdot_] := Null (*to be added*) ;


(* ::Section:: *)
(*Regions*)


Regions[\[Alpha]_, m_, mdot_] := Module[{rbc, rab, raii, RegionC, RegionB, RegionA, RegionII},
	rbc = r/. NSolve[TSB[r, \[Alpha], m, mdot] == TSC[r, \[Alpha], m, mdot] && r>1, r, Reals];
	rab = r/. NSolve[TSA[r, \[Alpha], m, mdot] == TSB[r, \[Alpha], m, mdot] && r>1, r, Reals];
	raii = r/. NSolve[TSA[r, \[Alpha], m, mdot] == TSII[r, \[Alpha], m, mdot] && r>1, r, Reals];

	If[Length[rbc]==0, 
		RegionC = Function[{Global`r}, Global`r>=1, Listable]; 
		RegionA = Function[{Global`r}, False, Listable];
		RegionB = Function[{Global`r}, False, Listable];
		RegionII = Function[{Global`r}, False, Listable],
		If [Length[rab]==0,
			RegionC = Function[{Global`r}, (Global`r>=1 && Global`r<=rbc[[1]])||Global`r>=rbc[[2]], Listable];
			RegionB = Function[{Global`r}, Global`r>=rbc[[1]] && Global`r<=rbc[[2]], Listable];
			RegionA = Function[{Global`r}, False, Listable]; 
			RegionII = Function[{Global`r}, False, Listable],
			If[Length[raii]==0 || \[Tau]starA[raii[[1]]]>1,
				RegionC = Function[{Global`r}, (Global`r>=1 && Global`r<=rbc[[1]])||Global`r>=rbc[[2]], Listable]; 
				RegionB = Function[{Global`r}, (Global`r>=rbc[[1]] && Global`r<=rab[[1]])||(Global`r>=rab[[2]] && Global`r<=rbc[[2]]), Listable];
				RegionA = Function[{Global`r}, Global`r>=rab[[1]] && Global`r<=rab[[2]], Listable];
				RegionII = Function[{Global`r}, False, Listable],
				(*else*)
				RegionC = Function[{Global`r}, (Global`r>=1 && Global`r<=rbc[[1]])||Global`r>=rbc[[2]], Listable]; 
				RegionB = Function[{Global`r}, (Global`r>=rbc[[1]] && Global`r<=rab[[1]])||(Global`r>=rab[[2]] && Global`r<=rbc[[2]]), Listable];
				RegionA = Function[{Global`r}, (Global`r>=rab[[1]] && Global`r<=raii[[1]])||(Global`r>=raii[[2]] && Global`r<=rab[[2]]), Listable]; 
				RegionII = Function[{Global`r}, Global`r>=raii[[1]] && Global`r<=raii[[2]], Listable];
			]
		]
	];
	
	<| 
		"RegionC" -> RegionC,
		"RegionB" -> RegionB,
		"RegionA" -> RegionA,
		"RegionII" -> RegionII
	|>
]


(* ::Section:: *)
(*Public Functions*)


(* ::Text:: *)
(**)


Options[DiskParams] = {"InputUnits" -> "ShakuraSunyaev", "OutputUnits" -> "SI", "rUnits" -> "BHMass"}


DiskParams[\[Alpha]_, m_, mdot_, OptionsPattern[]] := Module[{rFactor, RegionC, RegionB, RegionA, RegionII, TS, F, Q, \[Nu]max},

(*Units Conversion*)
If[OptionValue["InputUnits"]=="SI",
	mdot = mdot/(9.549 10^-16 m);
	m = m/(1.988 10^30),
	If[OptionValue["InputUnits"]=="CGS",
		mdot = mdot/(9.549 10^-16 m);
		m = m/(1.988 10^33),
		If[OptionValue["InputUnits"]=="Geometrized",
			mdot = mdot/(3.185 10^-24 m);
			m = m/1480;
		];
	];
];

rFactor = 1/6;
If[OptionValue["rUnits"]=="ShakuraSunyaev",
	rFactor = 1,
	If[OptionValue["rUnits"]=="SI" || OptionValue["rUnits"]=="Geometrized",
		rFactor = 1.1284 10^-4/m,
		If[OptionValue["rUnits"]=="CGS",
			rFactor = 1.1284 10^-6/m
		];
	];
];

{RegionC, RegionB, RegionA, RegionII} = {"RegionC", "RegionB", "RegionA", "RegionII"} /. Regions[\[Alpha], m, mdot];

(*Surface Temperature*)
TS = Function[{Global`r}, Piecewise[{
				{TSC[rFactor Global`r, \[Alpha], m, mdot], RegionC[rFactor Global`r]},
				{TSB[rFactor Global`r, \[Alpha], m, mdot], RegionB[rFactor Global`r]},
				{TSA[rFactor Global`r, \[Alpha], m, mdot], RegionA[rFactor Global`r]},
				{TSII[rFactor Global`r, \[Alpha], m, mdot], RegionII[rFactor Global`r]}
}], Listable];

(*Spectral Flux Density*)
F = Function[{Global`\[Nu], Global`r}, Piecewise[{
				{FC[Global`\[Nu], rFactor Global`r, \[Alpha], m, mdot], RegionC[rFactor Global`r]},
				{FB[Global`\[Nu], rFactor Global`r, \[Alpha], m, mdot], RegionB[rFactor Global`r]},
				{FA[Global`\[Nu], rFactor Global`r, \[Alpha], m, mdot], RegionA[rFactor Global`r]},
				{FII[Global`\[Nu], rFactor Global`r, \[Alpha], m, mdot], RegionII[rFactor Global`r]}
}], Listable];

(*Integrated Flux Density*)
Q = Function[{Global`r}, Piecewise[{
			{QC[rFactor Global`r, \[Alpha], m, mdot], RegionC[rFactor Global`r]},
			{QB[rFactor Global`r, \[Alpha], m, mdot], RegionB[rFactor Global`r]},
			{QA[rFactor Global`r, \[Alpha], m, mdot], RegionA[rFactor Global`r]},
			{QII[rFactor Global`r, \[Alpha], m, mdot], RegionII[rFactor Global`r]}
}], Listable];

(*Peak Frequency*)
\[Nu]max = Function[{Global`r}, Piecewise[{
			{5.8789 10^10 TSC[rFactor Global`r, \[Alpha], m, mdot], RegionC[rFactor Global`r]},
			{3.6578 10^10 TSB[rFactor Global`r, \[Alpha], m, mdot], RegionB[rFactor Global`r]},
			{2.6021 10^10 TSA[rFactor Global`r, \[Alpha], m, mdot], RegionA[rFactor Global`r]},
			{None (*to be added*), RegionII[rFactor Global`r]}
}], Listable];

<|
	"Temperature" -> TS,
	"SpectralFluxDensity" -> F,
	"FluxDensity" -> Q,
	"PeakFrequency" -> \[Nu]max,
	"rDefinition" -> 1/(6 rFactor) (*If r-input comes in BHMasses, it must be multiplied by this*)
|>
]


ObservedDiskElement[disk_Association, geodesic_] := Module[{\[Kappa], rs, rFactor, F, Q, TS, \[Nu]max, Teff},

rFactor = disk["rDefinition"];
If[Length[geodesic["EquatorIntersectionCoordinates"][[2]]]==0||geodesic["EmissionParameters"][[1]]==-1, F=Q=TS=\[Nu]max=Teff=-1,
	\[Kappa] = geodesic["EmissionParameters"][[1]];
	rs = geodesic["EquatorIntersectionCoordinates"][[2, 1]];
	F = Function[{Global`\[Nu]}, \[Kappa]^2 disk["SpectralFluxDensity"][Global`\[Nu]/\[Kappa], rFactor rs], Listable];
	Q = \[Kappa]^3 disk["FluxDensity"][rFactor rs];
	TS = disk["Temperature"][rFactor rs];
	\[Nu]max = \[Kappa] disk["PeakFrequency"][rFactor rs];
	Teff = \[Nu]max/(5.879 10^10); (*Wien's displacement law*)
];

<|
	"PhysicalTemperature" -> TS,
	"EffectiveTemperature" -> Teff,
	"SpectralFluxDensity" -> F,
	"FluxDensity" -> Q,
	"PeakFrequency" -> \[Nu]max
|>
]

ClearAttributes[ObservedDiskElement, Listable]


(* ::Section:: *)
(*Close the Package*)


End[];

EndPackage[];
